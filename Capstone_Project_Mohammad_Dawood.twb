<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
        <calculation class='tableau' formula='&quot;Confirmed&quot;' />
        <members>
          <member value='&quot;Confirmed&quot;' />
          <member value='&quot;Cured&quot;' />
          <member value='&quot;Deaths&quot;' />
        </members>
      </column>
      <column caption='Daily_Average' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='874173'>
        <calculation class='tableau' formula='874173' />
        <range max='1263799' min='0' />
      </column>
      <column caption='Average' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1870001'>
        <calculation class='tableau' formula='1870001' />
        <range granularity='1000' max='9500000' min='1' />
      </column>
      <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
        <calculation class='tableau' formula='12' />
        <range granularity='1' max='37' min='1' />
      </column>
    </datasource>
    <datasource caption='AgeGroupDetails+' inline='true' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AgeGroupDetails' name='textscan.0e8ui9s0z4prki121vvyj0u33sc9'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/eve/Desktop/Tableau Capstone Project/Covid-19 India Dataset/AgeGroupDetails.csv' dataRefreshTime='' directory='F:/Data Science/Classes/Tableau/Tableau_Capstone_Project_Mohammad_Dawood/Covid-19 India Dataset' filename='C:/Users/eve/AppData/Local/Temp/TableauTemp/02yr8f41nzsspk1fq2h4t08g11rt/AgeGroupDetails.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[AgeGroupDetails.csv+].[Negative]' />
              <expression op='[StatewiseTestingDetails.csv].[Negative]' />
            </expression>
          </clause>
          <relation all='true' name='AgeGroupDetails.csv+' type='union'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Sno' />
              <column datatype='string' name='AgeGroup' />
              <column datatype='integer' name='TotalCases' />
              <column datatype='real' name='Percentage' />
              <column datatype='string' name='State/UT' />
              <column datatype='integer' name='PrimaryHealthCenters_HMIS' />
              <column datatype='integer' name='CommunityHealthCenters_HMIS' />
              <column datatype='integer' name='SubDistrictHospitals_HMIS' />
              <column datatype='integer' name='DistrictHospitals_HMIS' />
              <column datatype='integer' name='TotalPublicHealthFacilities_HMIS' />
              <column datatype='integer' name='PublicBeds_HMIS' />
              <column datatype='integer' name='RuralHospitals_NHP18' />
              <column datatype='integer' name='RuralBeds_NHP18' />
              <column datatype='integer' name='UrbanHospitals_NHP18' />
              <column datatype='integer' name='UrbanBeds_NHP18' />
              <column datatype='string' name='lab' />
              <column datatype='string' name='address' />
              <column datatype='integer' name='pincode' />
              <column datatype='string' name='city' />
              <column datatype='string' name='state' />
              <column datatype='string' name='type' />
              <column datatype='integer' name='id' />
              <column datatype='string' name='government_id' />
              <column datatype='date' name='diagnosed_date' />
              <column datatype='integer' name='age' />
              <column datatype='string' name='gender' />
              <column datatype='string' name='detected_city' />
              <column datatype='string' name='detected_district' />
              <column datatype='string' name='detected_state' />
              <column datatype='string' name='nationality' />
              <column datatype='string' name='current_status' />
              <column datatype='date' name='status_change_date' />
              <column datatype='string' name='notes' />
              <column datatype='date' name='Date' />
              <column datatype='real' name='TotalSamples' />
              <column datatype='integer' name='Negative' />
              <column datatype='real' name='Positive' />
              <column datatype='string' name='Time' />
              <column datatype='string' name='State/UnionTerritory' />
              <column datatype='integer' name='Confirmed' />
              <column datatype='integer' name='Cured' />
              <column datatype='integer' name='Deaths' />
              <column datatype='string' name='State / Union Territory' />
              <column datatype='integer' name='Population' />
              <column datatype='integer' name='Rural population' />
              <column datatype='integer' name='Urban population' />
              <column datatype='string' name='Area' />
              <column datatype='string' name='Density' />
              <column datatype='integer' name='Gender Ratio' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='AgeGroupDetails.csv' table='[AgeGroupDetails#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Sno' ordinal='0' />
                <column datatype='string' name='AgeGroup' ordinal='1' />
                <column datatype='integer' name='TotalCases' ordinal='2' />
                <column datatype='real' name='Percentage' ordinal='3' />
              </columns>
            </relation>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='HospitalBedsIndia.csv' table='[HospitalBedsIndia#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Sno' ordinal='0' />
                <column datatype='string' name='State/UT' ordinal='1' />
                <column datatype='integer' name='PrimaryHealthCenters_HMIS' ordinal='2' />
                <column datatype='integer' name='CommunityHealthCenters_HMIS' ordinal='3' />
                <column datatype='integer' name='SubDistrictHospitals_HMIS' ordinal='4' />
                <column datatype='integer' name='DistrictHospitals_HMIS' ordinal='5' />
                <column datatype='integer' name='TotalPublicHealthFacilities_HMIS' ordinal='6' />
                <column datatype='integer' name='PublicBeds_HMIS' ordinal='7' />
                <column datatype='integer' name='RuralHospitals_NHP18' ordinal='8' />
                <column datatype='integer' name='RuralBeds_NHP18' ordinal='9' />
                <column datatype='integer' name='UrbanHospitals_NHP18' ordinal='10' />
                <column datatype='integer' name='UrbanBeds_NHP18' ordinal='11' />
              </columns>
            </relation>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='ICMRTestingLabs.csv' table='[ICMRTestingLabs#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='lab' ordinal='0' />
                <column datatype='string' name='address' ordinal='1' />
                <column datatype='integer' name='pincode' ordinal='2' />
                <column datatype='string' name='city' ordinal='3' />
                <column datatype='string' name='state' ordinal='4' />
                <column datatype='string' name='type' ordinal='5' />
              </columns>
            </relation>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='IndividualDetails.csv' table='[IndividualDetails#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='id' ordinal='0' />
                <column datatype='string' name='government_id' ordinal='1' />
                <column datatype='date' name='diagnosed_date' ordinal='2' />
                <column datatype='integer' name='age' ordinal='3' />
                <column datatype='string' name='gender' ordinal='4' />
                <column datatype='string' name='detected_city' ordinal='5' />
                <column datatype='string' name='detected_district' ordinal='6' />
                <column datatype='string' name='detected_state' ordinal='7' />
                <column datatype='string' name='nationality' ordinal='8' />
                <column datatype='string' name='current_status' ordinal='9' />
                <column datatype='date' name='status_change_date' ordinal='10' />
                <column datatype='string' name='notes' ordinal='11' />
              </columns>
            </relation>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='StatewiseTestingDetails.csv1' table='[StatewiseTestingDetails#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='date' name='Date' ordinal='0' />
                <column datatype='string' name='State' ordinal='1' />
                <column datatype='real' name='TotalSamples' ordinal='2' />
                <column datatype='integer' name='Negative' ordinal='3' />
                <column datatype='real' name='Positive' ordinal='4' />
              </columns>
            </relation>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Sno' ordinal='0' />
                <column datatype='date' name='Date' ordinal='1' />
                <column datatype='string' name='Time' ordinal='2' />
                <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                <column datatype='integer' name='Confirmed' ordinal='4' />
                <column datatype='integer' name='Cured' ordinal='5' />
                <column datatype='integer' name='Deaths' ordinal='6' />
              </columns>
            </relation>
            <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='population_india_census2011.csv1' table='[population_india_census2011#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Sno' ordinal='0' />
                <column datatype='string' name='State / Union Territory' ordinal='1' />
                <column datatype='integer' name='Population' ordinal='2' />
                <column datatype='integer' name='Rural population' ordinal='3' />
                <column datatype='integer' name='Urban population' ordinal='4' />
                <column datatype='string' name='Area' ordinal='5' />
                <column datatype='string' name='Density' ordinal='6' />
                <column datatype='integer' name='Gender Ratio' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0e8ui9s0z4prki121vvyj0u33sc9' name='StatewiseTestingDetails.csv' table='[StatewiseTestingDetails#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='real' name='TotalSamples' ordinal='2' />
              <column datatype='integer' name='Negative' ordinal='3' />
              <column datatype='real' name='Positive' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AgeGroup]' value='[AgeGroupDetails.csv+].[AgeGroup]' />
          <map key='[Area]' value='[AgeGroupDetails.csv+].[Area]' />
          <map key='[CommunityHealthCenters_HMIS]' value='[AgeGroupDetails.csv+].[CommunityHealthCenters_HMIS]' />
          <map key='[Confirmed]' value='[AgeGroupDetails.csv+].[Confirmed]' />
          <map key='[Cured]' value='[AgeGroupDetails.csv+].[Cured]' />
          <map key='[Date (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[Date]' />
          <map key='[Date]' value='[AgeGroupDetails.csv+].[Date]' />
          <map key='[Deaths]' value='[AgeGroupDetails.csv+].[Deaths]' />
          <map key='[Density]' value='[AgeGroupDetails.csv+].[Density]' />
          <map key='[DistrictHospitals_HMIS]' value='[AgeGroupDetails.csv+].[DistrictHospitals_HMIS]' />
          <map key='[Gender Ratio]' value='[AgeGroupDetails.csv+].[Gender Ratio]' />
          <map key='[Negative (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[Negative]' />
          <map key='[Negative]' value='[AgeGroupDetails.csv+].[Negative]' />
          <map key='[Percentage]' value='[AgeGroupDetails.csv+].[Percentage]' />
          <map key='[Population]' value='[AgeGroupDetails.csv+].[Population]' />
          <map key='[Positive (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[Positive]' />
          <map key='[Positive]' value='[AgeGroupDetails.csv+].[Positive]' />
          <map key='[PrimaryHealthCenters_HMIS]' value='[AgeGroupDetails.csv+].[PrimaryHealthCenters_HMIS]' />
          <map key='[PublicBeds_HMIS]' value='[AgeGroupDetails.csv+].[PublicBeds_HMIS]' />
          <map key='[Rural population]' value='[AgeGroupDetails.csv+].[Rural population]' />
          <map key='[RuralBeds_NHP18]' value='[AgeGroupDetails.csv+].[RuralBeds_NHP18]' />
          <map key='[RuralHospitals_NHP18]' value='[AgeGroupDetails.csv+].[RuralHospitals_NHP18]' />
          <map key='[Sno]' value='[AgeGroupDetails.csv+].[Sno]' />
          <map key='[State / Union Territory]' value='[AgeGroupDetails.csv+].[State / Union Territory]' />
          <map key='[State/UT]' value='[AgeGroupDetails.csv+].[State/UT]' />
          <map key='[State/UnionTerritory]' value='[AgeGroupDetails.csv+].[State/UnionTerritory]' />
          <map key='[State]' value='[StatewiseTestingDetails.csv].[State]' />
          <map key='[SubDistrictHospitals_HMIS]' value='[AgeGroupDetails.csv+].[SubDistrictHospitals_HMIS]' />
          <map key='[Table Name]' value='[AgeGroupDetails.csv+].[Table Name]' />
          <map key='[Time]' value='[AgeGroupDetails.csv+].[Time]' />
          <map key='[TotalCases]' value='[AgeGroupDetails.csv+].[TotalCases]' />
          <map key='[TotalPublicHealthFacilities_HMIS]' value='[AgeGroupDetails.csv+].[TotalPublicHealthFacilities_HMIS]' />
          <map key='[TotalSamples (StatewiseTestingDetails.csv)]' value='[StatewiseTestingDetails.csv].[TotalSamples]' />
          <map key='[TotalSamples]' value='[AgeGroupDetails.csv+].[TotalSamples]' />
          <map key='[Urban population]' value='[AgeGroupDetails.csv+].[Urban population]' />
          <map key='[UrbanBeds_NHP18]' value='[AgeGroupDetails.csv+].[UrbanBeds_NHP18]' />
          <map key='[UrbanHospitals_NHP18]' value='[AgeGroupDetails.csv+].[UrbanHospitals_NHP18]' />
          <map key='[address]' value='[AgeGroupDetails.csv+].[address]' />
          <map key='[age]' value='[AgeGroupDetails.csv+].[age]' />
          <map key='[city]' value='[AgeGroupDetails.csv+].[city]' />
          <map key='[current_status]' value='[AgeGroupDetails.csv+].[current_status]' />
          <map key='[detected_city]' value='[AgeGroupDetails.csv+].[detected_city]' />
          <map key='[detected_district]' value='[AgeGroupDetails.csv+].[detected_district]' />
          <map key='[detected_state]' value='[AgeGroupDetails.csv+].[detected_state]' />
          <map key='[diagnosed_date]' value='[AgeGroupDetails.csv+].[diagnosed_date]' />
          <map key='[gender]' value='[AgeGroupDetails.csv+].[gender]' />
          <map key='[government_id]' value='[AgeGroupDetails.csv+].[government_id]' />
          <map key='[id]' value='[AgeGroupDetails.csv+].[id]' />
          <map key='[lab]' value='[AgeGroupDetails.csv+].[lab]' />
          <map key='[nationality]' value='[AgeGroupDetails.csv+].[nationality]' />
          <map key='[notes]' value='[AgeGroupDetails.csv+].[notes]' />
          <map key='[pincode]' value='[AgeGroupDetails.csv+].[pincode]' />
          <map key='[state]' value='[AgeGroupDetails.csv+].[state]' />
          <map key='[status_change_date]' value='[AgeGroupDetails.csv+].[status_change_date]' />
          <map key='[type]' value='[AgeGroupDetails.csv+].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AgeGroup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AgeGroup]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>AgeGroup</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCases]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>TotalCases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UT]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>State/UT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PrimaryHealthCenters_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PrimaryHealthCenters_HMIS]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>PrimaryHealthCenters_HMIS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CommunityHealthCenters_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CommunityHealthCenters_HMIS]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>CommunityHealthCenters_HMIS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SubDistrictHospitals_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SubDistrictHospitals_HMIS]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>SubDistrictHospitals_HMIS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DistrictHospitals_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DistrictHospitals_HMIS]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>DistrictHospitals_HMIS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalPublicHealthFacilities_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalPublicHealthFacilities_HMIS]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>TotalPublicHealthFacilities_HMIS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PublicBeds_HMIS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PublicBeds_HMIS]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>PublicBeds_HMIS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RuralHospitals_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RuralHospitals_NHP18]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>RuralHospitals_NHP18</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RuralBeds_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RuralBeds_NHP18]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>RuralBeds_NHP18</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UrbanHospitals_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UrbanHospitals_NHP18]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>UrbanHospitals_NHP18</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UrbanBeds_NHP18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UrbanBeds_NHP18]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>UrbanBeds_NHP18</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lab</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lab]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>lab</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pincode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pincode]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>pincode</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>government_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[government_id]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>government_id</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diagnosed_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[diagnosed_date]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>diagnosed_date</remote-alias>
            <ordinal>23</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detected_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detected_city]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>detected_city</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detected_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detected_district]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>detected_district</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>detected_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[detected_state]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>detected_state</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[current_status]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>current_status</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status_change_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[status_change_date]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>status_change_date</remote-alias>
            <ordinal>31</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[notes]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>notes</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>33</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalSamples]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State / Union Territory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State / Union Territory]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>State / Union Territory</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rural population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rural population]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Rural population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Urban population]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Urban population</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Area]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Area</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Density</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Density]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Density</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender Ratio</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gender Ratio]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Gender Ratio</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[AgeGroupDetails.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>50</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalSamples</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalSamples (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>TotalSamples</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Negative (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Negative</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive (StatewiseTestingDetails.csv)]</local-name>
            <parent-name>[StatewiseTestingDetails.csv]</parent-name>
            <remote-alias>Positive</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age Group' datatype='string' name='[AgeGroup]' role='dimension' type='nominal' />
      <column caption='Calc_for_color_refrence' datatype='boolean' name='[Calculation_485544364871737344]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Calculation_497084838554877953])&gt;[Parameters].[Parameter 3]' />
      </column>
      <column caption='Health Centers' datatype='integer' name='[Calculation_485544364928143365]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;NumCommunityHealthCenters HMIS&quot; THEN [NumCommunityHealthCenters_HMIS]&#13;&#10;WHEN &quot;NumPrimaryHealthCenters HMIS&quot; THEN [NumPrimaryHealthCenters_HMIS]&#13;&#10;END' />
      </column>
      <column caption='Calc_Cases' datatype='integer' name='[Calculation_497084838554877953]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Confirmed&quot; THEN [Confirmed]&#13;&#10;WHEN &quot;Cured&quot; THEN [Cured]&#13;&#10;WHEN &quot;Deaths&quot; THEN [Deaths]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[CommunityHealthCenters_HMIS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[DistrictHospitals_HMIS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PrimaryHealthCenters_HMIS]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rural population]' role='measure' type='quantitative' />
      <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State/UT]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
          <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[SubDistrictHospitals_HMIS]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[TotalCases]' role='measure' type='quantitative' />
      <column caption='TotalPublicHealthFacilities HMIS' datatype='integer' name='[TotalPublicHealthFacilities_HMIS]' role='measure' type='quantitative' />
      <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Urban population]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[detected_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[detected_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[TotalPublicHealthFacilities_HMIS]' derivation='Count' name='[cnt:TotalPublicHealthFacilities_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CommunityHealthCenters_HMIS]' derivation='Median' name='[med:CommunityHealthCenters_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DistrictHospitals_HMIS]' derivation='Median' name='[med:DistrictHospitals_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PrimaryHealthCenters_HMIS]' derivation='Median' name='[med:PrimaryHealthCenters_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SubDistrictHospitals_HMIS]' derivation='Median' name='[med:SubDistrictHospitals_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalPublicHealthFacilities_HMIS]' derivation='Median' name='[med:TotalPublicHealthFacilities_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/UT]' derivation='None' name='[none:State/UT:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[CommunityHealthCenters_HMIS]' derivation='Sum' name='[sum:CommunityHealthCenters_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DistrictHospitals_HMIS]' derivation='Sum' name='[sum:DistrictHospitals_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PrimaryHealthCenters_HMIS]' derivation='Sum' name='[sum:PrimaryHealthCenters_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rural population]' derivation='Sum' name='[sum:Rural population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SubDistrictHospitals_HMIS]' derivation='Sum' name='[sum:SubDistrictHospitals_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TotalPublicHealthFacilities_HMIS]' derivation='Sum' name='[sum:TotalPublicHealthFacilities_HMIS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Urban population]' derivation='Sum' name='[sum:Urban population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_485544364871737344]' derivation='User' name='[usr:Calculation_485544364871737344:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.320402' measure-ordering='alphabetic' measure-percentage='0.53592' parameter-percentage='0.143678' show-hidden-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[cnt:NumPrimaryHealthCenters_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[med:CommunityHealthCenters_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Negative:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:NumPrimaryHealthCenters_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[cnt:NumSubDistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[med:SubDistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:NumSubDistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:SubDistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[cnt:NumDistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[med:PrimaryHealthCenters_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:NumDistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:PrimaryHealthCenters_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[med:DistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:DistrictHospitals_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Urban population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[Parameters].[Parameter 4]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:CommunityHealthCenters_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[cnt:TotalPublicHealthFacilities_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[med:TotalPublicHealthFacilities_HMIS:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Positive:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Rural population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:TotalPublicHealthFacilities_HMIS:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State / Union Territory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:State / Union Territory:nk]' palette=':filled' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to=':filled/asterisk'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to=':filled/diamond'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to=':filled/down-triangle'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to=':filled/down-triangle'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to=':filled/down-triangle'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to=':filled/left-triangle'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to=':filled/left-triangle'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to=':filled/left-triangle'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to=':filled/plus'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to=':filled/right-triangle'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to=':filled/right-triangle'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to=':filled/triangle'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_485544364871737344:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dadar Nagar Haveli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cases being reassigned to states&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unassigned&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Telengana***&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Telangana***&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:State:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UT:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman &amp; Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakshadweep&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jammu &amp; Kashmir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dadra &amp; Nagar Haveli&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
          <calculation class='tableau' formula='&quot;Confirmed&quot;' />
        </column>
        <column caption='Average' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1870001'>
          <calculation class='tableau' formula='1870001' />
          <range granularity='1000' max='9500000' min='1' />
        </column>
        <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
          <calculation class='tableau' formula='12' />
          <range granularity='1' max='37' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Dynamic Bar_chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='20' italic='true'>State-wise Confirmed/Death/Recover Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
              <calculation class='tableau' formula='&quot;Confirmed&quot;' />
            </column>
            <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
              <calculation class='tableau' formula='12' />
              <range granularity='1' max='37' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
            <column caption='Calc_Cases' datatype='integer' name='[Calculation_497084838554877953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Confirmed&quot; THEN [Confirmed]&#13;&#10;WHEN &quot;Cured&quot; THEN [Cured]&#13;&#10;WHEN &quot;Deaths&quot; THEN [Deaths]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_497084838554877953]' derivation='Sum' name='[sum:Calculation_497084838554877953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_497084838554877953])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/UnionTerritory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' direction='DESC' using='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' />
          <slices>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' />
              <lod column='[Parameters].[Parameter 4]' />
              <tooltip column='[Parameters].[Parameter 1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State/UnionTerritory:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Calc_Cases:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true'>&lt;[Parameters].[Parameter 1]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]</rows>
        <cols>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]</cols>
      </table>
      <simple-id uuid='{F16B60FD-4E43-4A74-ACB0-219FB3B4F9CB}' />
    </worksheet>
    <worksheet name='Dynamic Line_Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontsize='20' italic='true'>Daily Corona Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
              <calculation class='tableau' formula='&quot;Confirmed&quot;' />
            </column>
            <column caption='Average' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1870001'>
              <calculation class='tableau' formula='1870001' />
              <range granularity='1000' max='9500000' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
            <column caption='Calc_for_color_refrence' datatype='boolean' name='[Calculation_485544364871737344]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Calculation_497084838554877953])&gt;[Parameters].[Parameter 3]' />
            </column>
            <column caption='Calc_Cases' datatype='integer' name='[Calculation_497084838554877953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Confirmed&quot; THEN [Confirmed]&#13;&#10;WHEN &quot;Cured&quot; THEN [Cured]&#13;&#10;WHEN &quot;Deaths&quot; THEN [Deaths]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_497084838554877953]' derivation='Sum' name='[sum:Calculation_497084838554877953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_485544364871737344]' derivation='User' name='[usr:Calculation_485544364871737344:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[tdy:Date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]</column>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[tdy:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[tdy:Date:qk]' value='36' />
            <format attr='width' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' value='28' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[usr:Calculation_485544364871737344:nk]' />
              <tooltip column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <reference-line axis-column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 3]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[tdy:Date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Calc_Cases:&#9;&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.066298246383667' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]</rows>
        <cols>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{09C4F84E-2E64-4F1B-8232-BC9F34BA6F3E}' />
    </worksheet>
    <worksheet name='Dynamic Map_Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' italic='true'>Corona Cases by Maps</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
              <calculation class='tableau' formula='&quot;Confirmed&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
            <column caption='Calc_Cases' datatype='integer' name='[Calculation_497084838554877953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &quot;Confirmed&quot; THEN [Confirmed]&#13;&#10;WHEN &quot;Cured&quot; THEN [Cured]&#13;&#10;WHEN &quot;Deaths&quot; THEN [Deaths]&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_497084838554877953]' derivation='Sum' name='[sum:Calculation_497084838554877953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]' field-type='quantitative' max='11639120.033282025' min='5946751.1173818465' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]' field-type='quantitative' max='4292875.3975863829' min='900993.96542217478' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' />
              <text column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]' />
              <text column='[Parameters].[Parameter 1]' />
              <lod column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]' />
              <geometry column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]</rows>
        <cols>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{107C8226-8857-4018-ADA0-78F1CD562BE2}' />
    </worksheet>
    <worksheet name='Dynamic Scatter_Plots'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='20' italic='true'>State-wise Corona Testing</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
            <column datatype='integer' name='[Negative]' role='measure' type='quantitative' />
            <column datatype='real' name='[Positive]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
                <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
              </semantic-values>
            </column>
            <column caption='Total Samples' datatype='real' name='[TotalSamples]' role='measure' type='quantitative' />
            <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Negative]' derivation='Sum' name='[sum:Negative:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Positive]' derivation='Sum' name='[sum:Positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalSamples]' derivation='Sum' name='[sum:TotalSamples:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([address])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Latitude (generated)]</column>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Longitude (generated)]</column>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Negative:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Negative:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Negative:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Positive:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Positive:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Positive:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#fefaf1' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' />
              <shape column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' />
              <lod column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:TotalSamples:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5524861812591553' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1040' />
                <format attr='maxwidth' value='1040' />
                <format attr='minheight' value='640' />
                <format attr='maxheight' value='640' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Positive:qk]</rows>
        <cols>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Negative:qk]</cols>
      </table>
      <simple-id uuid='{7817547B-11DC-42B0-9952-2665663D81C2}' />
    </worksheet>
    <worksheet name='Dynamic Scatter_Plots_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='20' italic='true'>State-wise Population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
              <calculation class='tableau' formula='12' />
              <range granularity='1' max='37' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rural population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State / Union Territory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Urban population]' role='measure' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[State / Union Territory]' derivation='None' name='[none:State / Union Territory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rural population]' derivation='Sum' name='[sum:Rural population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Urban population]' derivation='Sum' name='[sum:Urban population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([gender])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State / Union Territory:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State / Union Territory:nk]' />
              <groupfilter function='member' level='[none:State / Union Territory:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]' direction='DESC' using='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Population:qk]' />
          <slices>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Rural population:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]' />
              <shape column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]' />
              <lod column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Population:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State / Union Territory:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rural population:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Rural population:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Urban population:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Urban population:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'>&lt;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Population:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Urban population:qk]</rows>
        <cols>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Rural population:qk]</cols>
      </table>
      <simple-id uuid='{4997BE41-DF56-455F-9CA2-4BB3791DBA8A}' />
    </worksheet>
    <worksheet name='Dynamic Text_Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontsize='20' italic='true'>Health Facilities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
              <calculation class='tableau' formula='12' />
              <range granularity='1' max='37' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
            <column datatype='integer' name='[CommunityHealthCenters_HMIS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[DistrictHospitals_HMIS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[PrimaryHealthCenters_HMIS]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UT]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[SubDistrictHospitals_HMIS]' role='measure' type='quantitative' />
            <column caption='TotalPublicHealthFacilities HMIS' datatype='integer' name='[TotalPublicHealthFacilities_HMIS]' role='measure' type='quantitative' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[State/UT]' derivation='None' name='[none:State/UT:nk]' pivot='key' type='nominal' />
            <column-instance column='[CommunityHealthCenters_HMIS]' derivation='Sum' name='[sum:CommunityHealthCenters_HMIS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DistrictHospitals_HMIS]' derivation='Sum' name='[sum:DistrictHospitals_HMIS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PrimaryHealthCenters_HMIS]' derivation='Sum' name='[sum:PrimaryHealthCenters_HMIS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SubDistrictHospitals_HMIS]' derivation='Sum' name='[sum:SubDistrictHospitals_HMIS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TotalPublicHealthFacilities_HMIS]' derivation='Sum' name='[sum:TotalPublicHealthFacilities_HMIS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:CommunityHealthCenters_HMIS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:PrimaryHealthCenters_HMIS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:DistrictHospitals_HMIS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:SubDistrictHospitals_HMIS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:TotalPublicHealthFacilities_HMIS:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:CommunityHealthCenters_HMIS:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:PrimaryHealthCenters_HMIS:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:DistrictHospitals_HMIS:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:SubDistrictHospitals_HMIS:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:TotalPublicHealthFacilities_HMIS:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]'>
            <groupfilter count='[Parameters].[Parameter 4]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([gender])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State/UT:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State/UT:nk]' />
              <groupfilter function='member' level='[none:State/UT:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]</column>
            <column>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]' value='62' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]' />
              <text column='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]</rows>
        <cols>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DA8DBC62-B5F6-4A50-9640-8C756679F185}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#d3b348' fontsize='22' italic='true'>Covid-19 Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-width' value='3' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#c0c0c0' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#faf4e7' />
          <format attr='border-width' value='3' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#ffffff' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Cases' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Confirmed&quot;'>
          <calculation class='tableau' formula='&quot;Confirmed&quot;' />
          <members>
            <member value='&quot;Confirmed&quot;' />
            <member value='&quot;Cured&quot;' />
            <member value='&quot;Deaths&quot;' />
          </members>
        </column>
        <column caption='Average' datatype='integer' datatype-customized='true' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='1870001'>
          <calculation class='tableau' formula='1870001' />
          <range granularity='1000' max='9500000' min='1' />
        </column>
        <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
          <calculation class='tableau' formula='12' />
          <range granularity='1' max='37' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='19' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='5' param='vert' type='layout-flow' w='89378' x='483' y='929'>
              <zone fixed-size='85' h='10801' id='7' is-fixed='true' type='title' w='89378' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='87341' id='6' type='layout-basic' w='89378' x='483' y='11730'>
                <zone h='43670' id='16' name='Dynamic Map_Chart' w='44687' x='483' y='11730'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43670' id='17' name='Dynamic Line_Chart' w='44691' x='45170' y='11730'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43671' id='21' name='Dynamic Bar_chart' w='89378' x='483' y='55400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='18' is-fixed='true' param='vert' type='layout-flow' w='9656' x='89861' y='929'>
              <zone fixed-size='133' h='16376' id='22' is-fixed='true' mode='slider' param='[Parameters].[Parameter 4]' type='paramctrl' w='9656' x='89861' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8362' id='11' is-centered='0' is-scaled='1' param='C:/Users/eve/Downloads/coronavirus.png' type='bitmap' w='5311' x='29753' y='2439' />
        <zone h='8827' id='12' is-centered='0' is-scaled='1' param='C:/Users/eve/Downloads/Accelerating-LogoBI-6x.png' type='bitmap' w='22116' x='1193' y='1858' />
        <zone h='9059' id='13' is-centered='0' is-scaled='1' param='C:/Users/eve/Downloads/india.png' type='bitmap' w='7001' x='78696' y='1742' />
        <zone h='10918' id='15' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='9656' x='90042' y='19977' />
        <zone h='6620' id='20' mode='slider' param='[Parameters].[Parameter 3]' type='paramctrl' w='12871' x='75821' y='12195' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#d3b348' fontsize='22' italic='true'>Covid-19 Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='39' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='40' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='85' h='10801' id='7' type='title' w='89378' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='133' h='16376' id='22' mode='slider' param='[Parameters].[Parameter 4]' type='paramctrl' w='9656' x='89861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='72' h='9059' id='13' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/eve/Downloads/india.png' type='bitmap' w='7001' x='78696' y='1742'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='70' h='8827' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/eve/Downloads/Accelerating-LogoBI-6x.png' type='bitmap' w='22116' x='1193' y='1858'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='66' h='8362' id='11' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/eve/Downloads/coronavirus.png' type='bitmap' w='5311' x='29753' y='2439'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43670' id='16' is-fixed='true' name='Dynamic Map_Chart' w='44687' x='483' y='11730'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43670' id='17' is-fixed='true' name='Dynamic Line_Chart' w='44691' x='45170' y='11730'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6620' id='20' mode='slider' param='[Parameters].[Parameter 3]' type='paramctrl' w='12871' x='75821' y='12195'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10918' id='15' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='9656' x='90042' y='19977'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43671' id='21' is-fixed='true' name='Dynamic Bar_chart' w='89378' x='483' y='55400'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CEC71AA7-22CB-4CAF-A516-8FDEAD64AB36}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#d3b348' fontsize='24' italic='true'>      Covid-19 Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#fefaf1' />
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='center' />
          <format attr='font-weight' value='bold' />
          <format attr='font-style' value='normal' />
          <format attr='font-size' value='12' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='AgeGroupDetails+' name='federated.0l3qx3k08vaslr15sz7rd1t8mhke' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top_N' datatype='integer' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12'>
          <calculation class='tableau' formula='12' />
          <range granularity='1' max='37' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0l3qx3k08vaslr15sz7rd1t8mhke'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
            <semantic-value key='&quot;Ladakh&quot;' value='&quot;Jammu and Kashmir&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='13' param='horz' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='5' param='vert' type='layout-flow' w='89378' x='483' y='929'>
              <zone fixed-size='83' h='10569' id='7' is-fixed='true' type='title' w='89378' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='1252' h='87573' id='6' is-fixed='true' type='layout-basic' w='89378' x='483' y='11498'>
                <zone h='42625' id='11' name='Dynamic Scatter_Plots' w='44689' x='483' y='11498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='87573' id='15' name='Dynamic Scatter_Plots_2' w='44689' x='45172' y='11498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44948' id='18' name='Dynamic Text_Table' w='44689' x='483' y='54123'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='12' is-fixed='true' param='vert' type='layout-flow' w='9656' x='89861' y='929'>
              <zone fixed-size='125' h='15447' id='17' is-fixed='true' mode='slider' param='[Parameters].[Parameter 4]' type='paramctrl' w='9656' x='89861' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#f2f2f2' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9529' id='8' is-centered='0' is-scaled='1' param='C:/Users/eve/Downloads/Accelerating-LogoBI-6x.png' type='bitmap' w='24462' x='692' y='1647' />
        <zone h='8827' id='9' is-centered='0' is-scaled='1' param='C:/Users/eve/Downloads/coronavirus.png' type='bitmap' w='7664' x='29873' y='1510' />
        <zone h='9294' id='10' is-centered='0' is-scaled='1' param='C:/Users/eve/Downloads/india.png' type='bitmap' w='7231' x='74923' y='1059' />
        <zone h='5575' id='14' mode='slider' name='Dynamic Scatter_Plots' param='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' type='filter' w='12855' x='604' y='11731' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#d3b348' fontsize='24' italic='true'>      Covid-19 Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='34' param='vert' type='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='83' h='10569' id='7' type='title' w='89378' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='125' h='15447' id='17' mode='slider' param='[Parameters].[Parameter 4]' type='paramctrl' w='9656' x='89861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='75' h='9294' id='10' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/eve/Downloads/india.png' type='bitmap' w='7231' x='74923' y='1059'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='71' h='8827' id='9' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/eve/Downloads/coronavirus.png' type='bitmap' w='7664' x='29873' y='1510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='76' h='9529' id='8' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/eve/Downloads/Accelerating-LogoBI-6x.png' type='bitmap' w='24462' x='692' y='1647'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5575' id='14' mode='slider' name='Dynamic Scatter_Plots' param='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' type='filter' w='12855' x='604' y='11731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42625' id='11' is-fixed='true' name='Dynamic Scatter_Plots' w='44689' x='483' y='11498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87573' id='15' is-fixed='true' name='Dynamic Scatter_Plots_2' w='44689' x='45172' y='11498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44948' id='18' is-fixed='true' name='Dynamic Text_Table' w='44689' x='483' y='54123'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A160F47E-7961-4BB9-803A-A1438D85A1E8}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='1' param='vert' removable='false' type='layout-flow' w='99034' x='483' y='929'>
            <zone h='4878' id='3' type='title' w='99034' x='483' y='929' />
            <zone h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99034' x='483' y='5807' />
            <zone h='81533' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99034' x='483' y='17538'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Total Covid-19 Confirmed/Cured/Death Cases via Map...' captured-sheet='Dynamic Map_Chart' id='2'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 1]' value='&quot;Confirmed&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Daily/Monthly/Yearly Covid-19 Cases with Dynamic Average Line using Line Chart...' captured-sheet='Dynamic Line_Chart' id='3' />
                  <story-point caption='State-wise  Comparision of Covid-19 Confirmed/Cured/Deaths Cases by Bar Chart...' captured-sheet='Dynamic Bar_chart' id='4' />
                  <story-point caption='State-wise Comparision of Covid-19 testing via Dynamic Scatter Plot chart...' captured-sheet='Dynamic Scatter_Plots' id='5' />
                  <story-point caption='State-wise Data of Urban/Rural/ Total Population via Scatter Plots chart...' captured-sheet='Dynamic Scatter_Plots_2' id='6' />
                  <story-point caption='State-wise Comparision of Public Health Facilities using Dynamic Text Table...' captured-sheet='Dynamic Text_Table' id='7'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 4]' value='27' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{518B811F-536D-4EF7-8061-AB31D789F738}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Dynamic Scatter_Plots_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Rural population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09333E20-4C05-4596-8DC9-231BE6347206}' />
    </window>
    <window class='worksheet' name='Dynamic Map_Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:Calculation_497084838554877953:qk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[sum:TotalCases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D92BB72-9A82-43D7-8171-2BE9B25B667C}' />
    </window>
    <window class='worksheet' name='Dynamic Line_Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[usr:Calculation_485544364871737344:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6369493-689C-4562-B7EF-9CE80FDBBF72}' />
    </window>
    <window class='worksheet' name='Dynamic Bar_chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C22A4D83-E049-4D2F-9DF4-72427456D419}' />
    </window>
    <window class='worksheet' name='Dynamic Scatter_Plots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='slider' param='[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State / Union Territory:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:detected_state:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:state:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[yr:Date (StatewiseTestingDetails.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E451405-610C-474C-AB51-52F953519DEB}' />
    </window>
    <window class='worksheet' name='Dynamic Text_Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[:Measure Names]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:NumCommunityHealthCenters_HMIS:qk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:NumPrimaryHealthCenters_HMIS:qk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UT:nk]</field>
            <field>[federated.0l3qx3k08vaslr15sz7rd1t8mhke].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A078E24-D03D-4908-B9DA-C011DF976C1D}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Dynamic Bar_chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dynamic Line_Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dynamic Map_Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BD5B0B1F-9F15-4C7A-851E-0DFEBC28B3AF}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Dynamic Scatter_Plots'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dynamic Scatter_Plots_2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dynamic Text_Table'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{91248EC0-427C-4E9C-88F0-BFD94C4B4A20}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='2' />
      <simple-id uuid='{560F97D3-5818-4689-998C-E115F956E5E4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5xcV3nw/z333um7s703aVWtYlmybGywce9gSoAAIWDsQGJI4PcDk5A3
      vMTmBfzSAgFSAGNMQjEBG4O7kZtsS5YtS1bXanub3Z2Z3Z0+c+t5/5jVSqtdNXslraT5fqTP
      ztx5Tr3nOec55z73HCGllBQocJainOoMFChwKikoQIGzmmkKIKWc8X+BMxMpJW1tbfz+wQex
      bZtMJsOPfvQjnn322bPivmuHXrjzzjt56aWXABBC4Ha7cbvdLF++nI997GMsXLgQIcRJyVxb
      Wxvf/e53p1wTQlBbW8v111/PhRdeOJmXRCLBT37yE2zbBkBVVYLBIGvXrmXVqlUoSmGwm4nv
      /8u/kF23jvZolJXnnsvmzZsp2rKF3zzwAKtXryYYDPLAAw+wZs0aWltbT9q9P2nIQ7jxxhsl
      MON/n88nn3766UODSNNx5OOjjvx8hyM/tNuRn2pz5AMRRxq2M002Zzvy/rAjP9HmyA/uduRn
      2h35xKgjLWe67HPPPXfYvAgh5G233SYNw5BSStnX1yfdbveMshdccIHcunWrdGZI42znDw89
      JN910UXyH6+6Sr744ovyhRdekH91xRXyEx/7mLRtWw4NDclbLr9cfuamm+RLL710qrM76wgp
      p45zN910E4899hgAq1evpr6+nk2bNhGNRgG45ppreOqppyblu7KSD++BTeMi394UwAEQnFci
      uX8ZLPELpJS8noa/2A17EgIUCWK/LLy9An55DjR6DvQwzz//PJdffjkAmqbh8XjQdR3LsiZl
      fv7zn/PRj36U/v5+Fi5ciGEYMyp6eXk5GzZsYMmSJcfTP5yRSCl55ZVXWLlyJT6fj6/ceSfv
      Gxvjt+3tVJaXc/WyZfxmyxYiJSUEa2oo7uykLRzmio9/nI/dcsupzv6sckS74DOf+QyPPPII
      f/jDHyavDQ4OTn6OGJKrXodN43BjleSx82DPhfCn1fChOsm2OFz1OvTmJNvTcNVWaEvBx5sk
      G86Hzovg4fPguipYH4XrtsGYObPdecMNNxCPxxkdHeUDH/jA5PWHH354muzy5cu55557ePe7
      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
      gAmhHqoF+n9PUCHvEZXrCQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dynamic Bar_chart' width='192'>
      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
      nLluxMYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dynamic Line_Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dynamic Map_Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dynamic Scatter_Plots' width='192'>
      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
      CYDoaf8O9XXvK6kaSbMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dynamic Scatter_Plots_2' width='192'>
      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
      mzpeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dynamic Text_Table' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
